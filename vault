#!/usr/bin/gjs

/*
 * Vault is a safe place to store data
 *
 * Copyright (C) 2020 konkor <konkor.github.io>
 *
 * Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * You should have received a copy of the GNU General Public License along
 * with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

const GLib = imports.gi.GLib;
const Gio = imports.gi.Gio;
const System = imports.system;

const APPDIR = get_appdir ();
imports.searchPath.unshift(APPDIR);
const Application = imports.common.Application;

ARGV.unshift (System.programInvocationName);

let app = new Application.VaultApplication (ARGV);
app.run (ARGV);

function getCurrentFile () {
    let stack = (new Error()).stack;
    let stackLine = stack.split('\n')[1];
    if (!stackLine)
        throw new Error ('Could not find current file');
    let match = new RegExp ('@(.+):\\d+').exec(stackLine);
    if (!match)
        throw new Error ('Could not find current file');
    let path = match[1];
    let file = Gio.File.new_for_path (path);
    return [file.get_path(), file.get_parent().get_path(), file.get_basename()];
}

function get_appdir () {
    let s = getCurrentFile ()[1];
    if (GLib.file_test (s + "/common/Application.js", GLib.FileTest.EXISTS)) return s;
    s = GLib.get_home_dir () + "/.local/share/vault";
    if (GLib.file_test (s + "/common/Application.js", GLib.FileTest.EXISTS)) return s;
    s = "/usr/local/share/vault";
    if (GLib.file_test (s + "/common/Application.js", GLib.FileTest.EXISTS)) return s;
    s = "/usr/share/vault";
    if (GLib.file_test (s + "/common/Application.js", GLib.FileTest.EXISTS)) return s;
    throw "NewStream installation not found...";
    return s;
}
